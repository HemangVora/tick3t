import { createWalletClient, http, publicActions, custom, } from "viem";
import { privateKeyToAccount } from "viem/accounts";
import { getChainConfirmations } from "./getChainConfirmations.js";
const getChainSpecs = async (chainName) => {
    try {
        const chains = await import("viem/chains");
        return chains[chainName];
    }
    catch {
        throw Error(`Cannot import ${chainName} from viem/chains`);
    }
};
export const customTransport = custom;
const createEthClient = (chain, jsonRpcUrl, transport) => createWalletClient({
    chain,
    transport: transport || http(jsonRpcUrl),
}).extend(publicActions);
export const createContext = async (config, transport) => {
    const chain = await getChainSpecs(config.chainName);
    const jsonRpcUrl = config.jsonRpcUrl ?? chain.rpcUrls.default.http[0];
    return {
        ...config,
        chain,
        account: privateKeyToAccount(config.privateKey),
        jsonRpcUrl,
        ethClient: createEthClient(chain, jsonRpcUrl, transport),
        confirmations: getChainConfirmations(config.chainName),
    };
};
